import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.io.File;

/**
 *
 * @author Tom
 */
public class mainWindow extends javax.swing.JFrame {

    private DocumentPDF doc;

    private String savePDFFile, openImageDirectory, openFBMFile, saveFBMFile;

    private String addFlipDirectory, addFlipIndex;

    private File curentPath;

    public File getCurentPath() {
        return curentPath;
    }

    public void setCurentPath(File curentPath) {
        this.curentPath = curentPath;
    }

    public String getAddFlipIndex() {
        return addFlipIndex;
    }

    public void setAddFlipIndex(String addFlipIndex) {
        this.addFlipIndex = addFlipIndex;
    }

    public String getAddFlipDirectory() {
        return addFlipDirectory;
    }

    public void setAddFlipDirectory(String addFlipDirectory) {
        this.addFlipDirectory = addFlipDirectory;
    }

    public DocumentPDF getDoc() {
        return doc;
    }

    public void setDoc(DocumentPDF doc) {
        this.doc = doc;
    }

    public String getOpenFBMFile() {
        return openFBMFile;
    }

    public void setOpenFBMFile(String openFBMFile) {
        this.openFBMFile = openFBMFile;
    }

    public String getOpenImageDirectory() {
        return openImageDirectory;
    }

    public void setOpenImageDirectory(String openImageDirectory) {
        this.openImageDirectory = openImageDirectory;
    }

    public String getSaveFBMFile() {
        return saveFBMFile;
    }

    public void setSaveFBMFile(String saveFBMFile) {
        this.saveFBMFile = saveFBMFile;
    }

    public String getSavePDFFile() {
        return savePDFFile;
    }

    public void setSavePDFFile(String savePDFFile) {
        this.savePDFFile = savePDFFile;
    }

    /** Creates new form mainWindow */
    public mainWindow() {
        initComponents();
        doc = new DocumentPDF();
        curentPath = null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        configButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        flipList = new javax.swing.JList();
        addFlip = new javax.swing.JButton();
        delFlip = new javax.swing.JButton();
        flipProperty = new javax.swing.JButton();
        genPDF = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        jSeparator3 = new javax.swing.JSeparator();
        thumbnail = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newFlip = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem3 = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flip Maker");
        setLocationByPlatform(true);
        setResizable(false);
        jLabel1.setText("Liste des FlipBooks");
        configButton.setText("Config. Page");
        configButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configButtonActionPerformed(evt);
            }
        });
        flipList.setModel(new javax.swing.DefaultListModel());
        flipList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        flipList.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flipListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(flipList);
        addFlip.setText("Ajouter");
        addFlip.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlipActionPerformed(evt);
            }
        });
        delFlip.setText("Retirer");
        delFlip.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delFlipActionPerformed(evt);
            }
        });
        flipProperty.setText("Propriétés");
        flipProperty.setEnabled(false);
        flipProperty.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flipPropertyActionPerformed(evt);
            }
        });
        genPDF.setText("PDF !!!!");
        genPDF.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genPDFActionPerformed(evt);
            }
        });
        fileMenu.setText("Fichier");
        newFlip.setAction(new javax.swing.AbstractAction() {

            public void actionPerformed(java.awt.event.ActionEvent e) {
                newFlip();
            }
        });
        newFlip.setText("Nouveau Flip");
        fileMenu.add(newFlip);
        fileMenu.add(jSeparator2);
        jMenuItem1.setAction(new javax.swing.AbstractAction() {

            public void actionPerformed(java.awt.event.ActionEvent e) {
                openFbmFile();
            }
        });
        jMenuItem1.setText("Ouvrir...");
        fileMenu.add(jMenuItem1);
        jMenuItem2.setAction(new javax.swing.AbstractAction() {

            public void actionPerformed(java.awt.event.ActionEvent e) {
                saveFbmFile();
            }
        });
        jMenuItem2.setText("Enregistrer...");
        fileMenu.add(jMenuItem2);
        fileMenu.add(jSeparator1);
        jMenuItem3.setAction(new javax.swing.AbstractAction() {

            public void actionPerformed(java.awt.event.ActionEvent e) {
                System.exit(0);
            }
        });
        jMenuItem3.setText("Quitter");
        fileMenu.add(jMenuItem3);
        jMenuBar1.add(fileMenu);
        setJMenuBar(jMenuBar1);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(delFlip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(addFlip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(flipProperty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addComponent(configButton)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(genPDF).addComponent(thumbnail))).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()).addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(addFlip).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(delFlip).addGap(18, 18, 18).addComponent(flipProperty)).addComponent(thumbnail)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(genPDF).addComponent(configButton))).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        pack();
    }

    private void configButtonActionPerformed(java.awt.event.ActionEvent evt) {
        new ConfigPageBox(this, true, doc).setVisible(true);
    }

    private void addFlipActionPerformed(java.awt.event.ActionEvent evt) {
        new openFlipBox(this, true).setVisible(true);
        if (addFlipDirectory != null) {
            try {
                doc.openFlipBooks(addFlipDirectory, addFlipIndex);
                ((javax.swing.DefaultListModel) flipList.getModel()).addElement(addFlipIndex);
                flipList.setSelectedIndex(flipList.getLastVisibleIndex());
                flipProperty.setEnabled(true);
                refreshThumbnail();
            } catch (openFileException e) {
                javax.swing.JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }

    private void genPDFActionPerformed(java.awt.event.ActionEvent evt) {
        int sel = javax.swing.JOptionPane.YES_OPTION;
        if (doc.format.equals(Constantes.Page.A4)) {
            sel = new javax.swing.JOptionPane().showConfirmDialog(this, "Imprimer seulement la sélection ?", "Attassion", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
        }
        if (sel != javax.swing.JOptionPane.CANCEL_OPTION) {
            new savePDFBox(this, true).setVisible(true);
            if (savePDFFile != null) {
                if (!savePDFFile.endsWith("pdf")) {
                    savePDFFile += ".pdf";
                }
                final String index = (String) ((javax.swing.DefaultListModel) flipList.getModel()).getElementAt(flipList.getSelectedIndex());
                if (sel == javax.swing.JOptionPane.YES_OPTION) {
                    doc.getFlipBook(index).setPrintSelectedFiles(true);
                } else if (sel == javax.swing.JOptionPane.NO_OPTION) {
                    doc.getFlipBook(index).setPrintSelectedFiles(false);
                }
                Thread t = new Thread() {

                    public void run() {
                        boolean finish = false;
                        try {
                            doc.generateDocument(savePDFFile, index, progressBar);
                            finish = true;
                        } catch (IOException e) {
                            javax.swing.JOptionPane.showMessageDialog(rootPane, e.getMessage());
                        } catch (tooManyFlipException e) {
                            javax.swing.JOptionPane.showMessageDialog(rootPane, e.getMessage());
                        }
                        progressBar.setValue(0);
                        if (finish == true) {
                            javax.swing.JOptionPane.showMessageDialog(rootPane, generatedFileString(savePDFFile));
                        } else {
                            File tmpFile = new File(savePDFFile);
                            tmpFile.delete();
                        }
                    }
                };
                t.start();
            }
        }
    }

    private String generatedFileString(String name) {
        return "Fichier : \"" + name + "\" généré.";
    }

    private void delFlipActionPerformed(java.awt.event.ActionEvent evt) {
        int index = flipList.getSelectedIndex();
        if (index != -1) {
            String tmpString = (String) ((javax.swing.DefaultListModel) flipList.getModel()).getElementAt(index);
            doc.deleteFlipBooks(tmpString);
            ((javax.swing.DefaultListModel) flipList.getModel()).remove(index);
            if (flipList.getModel().getSize() == 0) flipProperty.setEnabled(false);
        }
        refreshThumbnail();
    }

    private void flipPropertyActionPerformed(java.awt.event.ActionEvent evt) {
        int index = flipList.getSelectedIndex();
        String tmpString = (String) ((javax.swing.DefaultListModel) flipList.getModel()).getElementAt(index);
        new flipPropertyBox(this, true, doc, tmpString).setVisible(true);
    }

    private void flipListMouseClicked(java.awt.event.MouseEvent evt) {
        int index = flipList.getSelectedIndex();
        String tmpString;
        if (index != -1) {
            tmpString = (String) ((javax.swing.DefaultListModel) flipList.getModel()).getElementAt(index);
            if (evt.getClickCount() == 2) {
                new flipPropertyBox(this, true, doc, tmpString).setVisible(true);
            }
        }
        refreshThumbnail();
    }

    private java.awt.Image getScaledImage(java.awt.Image srcImg, int w, int h) {
        java.awt.image.BufferedImage resizedImg = new java.awt.image.BufferedImage(w, h, java.awt.image.BufferedImage.TYPE_INT_RGB);
        java.awt.Graphics2D g2 = resizedImg.createGraphics();
        g2.setRenderingHint(java.awt.RenderingHints.KEY_INTERPOLATION, java.awt.RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(srcImg, 0, 0, w, h, null);
        g2.dispose();
        return resizedImg;
    }

    private void refreshThumbnail() {
        int index = flipList.getSelectedIndex();
        String tmpString;
        if (index != -1) {
            tmpString = (String) ((javax.swing.DefaultListModel) flipList.getModel()).getElementAt(index);
            javax.swing.ImageIcon tmpIcon = new javax.swing.ImageIcon(doc.getFlipBook(tmpString).getMiddleImage());
            thumbnail.setIcon(new javax.swing.ImageIcon(getScaledImage(tmpIcon.getImage(), tmpIcon.getIconWidth() / 4, tmpIcon.getIconHeight() / 4)));
        } else {
            thumbnail.setIcon(null);
        }
    }

    private void newFlip() {
        int choice = javax.swing.JOptionPane.CANCEL_OPTION;
        if (doc.isChange() == true) {
            choice = javax.swing.JOptionPane.showConfirmDialog(this, "Attention flip non sauvergardé.\n Continuer ?", "Attassion", javax.swing.JOptionPane.OK_CANCEL_OPTION);
        }
        if (choice == javax.swing.JOptionPane.OK_OPTION || doc.isChange() == false) {
            java.util.Enumeration enumKeys = doc.getFlips();
            while (enumKeys.hasMoreElements()) {
                String index = (String) enumKeys.nextElement();
                doc.deleteFlipBooks(index);
                ((javax.swing.DefaultListModel) flipList.getModel()).removeElement(index);
            }
            doc.setChange(false);
            refreshThumbnail();
        }
    }

    private void openFbmFile() {
        int choice = javax.swing.JOptionPane.CANCEL_OPTION;
        if (doc.isChange() == true) {
            choice = javax.swing.JOptionPane.showConfirmDialog(this, "Attention flip non sauvergardé.\n Continuer ?", "Attassion", javax.swing.JOptionPane.OK_CANCEL_OPTION);
        }
        if (choice == javax.swing.JOptionPane.OK_OPTION || doc.isChange() == false) {
            doc.setChange(false);
            newFlip();
            new openFbmBox(this, true).setVisible(true);
            if (openFBMFile != null) {
                if (!openFBMFile.endsWith("fbm")) {
                    openFBMFile += ".fbm";
                }
                try {
                    FileInputStream fichier = new FileInputStream(openFBMFile);
                    ObjectInputStream ois = new ObjectInputStream(fichier);
                    doc = (DocumentPDF) ois.readObject();
                } catch (java.io.IOException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                }
                java.util.Enumeration enumKeys = doc.getFlips();
                while (enumKeys.hasMoreElements()) {
                    String index = (String) enumKeys.nextElement();
                    if (doc.checkValidity(index)) {
                        ((javax.swing.DefaultListModel) flipList.getModel()).addElement(index);
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Le Flip \"" + index + "\" n'a pu être chargé (répertoire inexistant).");
                        doc.deleteFlipBooks(index);
                    }
                }
                flipList.setSelectedIndex(flipList.getLastVisibleIndex());
                if (flipList.getModel().getSize() != 0) {
                    flipProperty.setEnabled(true);
                    refreshThumbnail();
                }
            }
        }
    }

    private void saveFbmFile() {
        new saveFbmBox(this, true).setVisible(true);
        if (saveFBMFile != null) {
            if (!saveFBMFile.endsWith("fbm")) {
                saveFBMFile += ".fbm";
            }
            try {
                doc.setChange(false);
                FileOutputStream fos = new FileOutputStream(saveFBMFile);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(doc);
                oos.flush();
                oos.close();
                fos.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new mainWindow().setVisible(true);
            }
        });
    }

    private javax.swing.JButton addFlip;

    private javax.swing.JButton configButton;

    private javax.swing.JButton delFlip;

    private javax.swing.JMenu fileMenu;

    private javax.swing.JList flipList;

    private javax.swing.JButton flipProperty;

    private javax.swing.JButton genPDF;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JMenuBar jMenuBar1;

    private javax.swing.JMenuItem jMenuItem1;

    private javax.swing.JMenuItem jMenuItem2;

    private javax.swing.JMenuItem jMenuItem3;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JSeparator jSeparator1;

    private javax.swing.JSeparator jSeparator2;

    private javax.swing.JSeparator jSeparator3;

    private javax.swing.JMenuItem newFlip;

    private javax.swing.JProgressBar progressBar;

    private javax.swing.JLabel thumbnail;
}
